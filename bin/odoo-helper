#!/bin/bash

# Use odoo-helper --help for a documentation


SCRIPT=$0;
SCRIPT_NAME=`basename $SCRIPT`;
F=`readlink -f $SCRIPT`;  # full script path;
WORKDIR=`pwd`;

# load basic conf
if [ -f "/etc/odoo-helper.conf" ]; then
    source "/etc/odoo-helper.conf";
fi
if [ -f "$HOME/odoo-helper.conf" ]; then
    source "$HOME/odoo-helper.conf";
fi
# -----------

set -e;  # Fail on errors


if [ -z $ODOO_HELPER_LIB ]; then
    echo "Odoo-helper-scripts seems not been installed correctly.";
    echo "Reinstall it (see Readme on https://github.com/katyukha/odoo-helper-scripts/)";
    exit 1;
fi

# Load common functions
source $ODOO_HELPER_LIB/common.bash; 

ohelper_require "fetch";
ohelper_require "link";
ohelper_require "server";
ohelper_require "db";
ohelper_require "test";
ohelper_require "addons";
ohelper_require "install";
ohelper_require "git";
ohelper_require "odoo";
ohelper_require "tr";
ohelper_require "postgres";
ohelper_require "system";
# ----------------------------------------------------------------------------------------

function print_usage {
    echo "
    Odoo helper script collection

    Version: $ODOO_HELPER_VERSION

    Usage:
        $SCRIPT_NAME [global options] command [command options]

    Current project settings:
        Project dir: ${PROJECT_ROOT_DIR:-'No project found'};
        Branch:      ${ODOO_BRANCH:-'Not defined'}

    Available commands:
        fetch [--help]                           - fetch and install odoo addon
        link [--help]                            - link module to custom_addons dir
        server [--help]                          - manage local odoo server (run, start, stop, etc)
        addons [--help]                          - addons related helpers
        test [--help]                            - test addon
        db [--help]                              - database management (list, create, drop, etc...)
        tr [--help]                              - manage translations (import, export, load, ...)
        postgres [--help]                        - manage local instance of postgresql server
        install [--help]                         - install related stuff (sys-deps, ...)
        generate_requirements [addons dir]       - parse addons dir, find all addons that are
                                                   git repositories and print odoo-requirements.txt content
                                                   file content suitable for *fetch* subcommand.
                                                   for example:
                                                       $SCRIPT_NAME generate_requirements > odoo_requirements.txt
                                                   and you can use generated file for fetch subcommand:
                                                       $SCRIPT_NAME fetch --requirements odoo_requirements.txt
        update_odoo                              - update odoo source code
        odoo-py [args]                           - run project-specific odoo.py script
        scaffold <addon_name> [addon_path]       - shortcut for odoo.py scaffold command.
        print_config                             - print current configuration
        status                                   - show project status
        start|stop|restart|log                   - shortcuts for server commands
        system [--help]                          - odoo-helper related functions
        exec <cmd> [args]                        - exec command in project environment. Useful if virtualenv is used
        pip <pip arguments>                      - shortcut to run project-specific pip.
                                                   It automaticaly configs pip to use OCA wheelhouse
                                                   to install OCA addons easily.
        help | --help | -h                       - display this help message
        --version                                - display odoo-helper version and exit
    
    Global options:
        --addons-dir <addons_directory>
        --downloads-dir <downloads_directory>
        --virtual-env <virtual_env_dir>       - optional, if specified, python dependencies
                                                will be installed in that virtual env
        --use-copy                            - if set, then downloaded modules, repositories will
                                                be copied instead of being symlinked
        --use-unbuffer                        - if set, then 'unbuffer' command from 'expect' package will be used
                                                otherwise standard 'exec' will be used to run odoo server
                                                this helps to make odoo server think that it runs in terminal thus
                                                it provides colored output.
        --no-colors                           - disable colored output
        --verbose|--vv                        - show extra output

    Also global options may be set up using configuration files.
    Folowing file paths will be searched for file $CONF_FILE_NAME:
        - /etc/default/$CONF_FILE_NAME  - Default conf. there may be some general settings placed
        - $HOME/$CONF_FILE_NAME         - User specific oconf  (overwrites previous conf)
        - Project specific conf         - File $CONF_FILE_NAME will be searched in $WORKDIR and all parent
                                          directories. First one found will be used

    Configuration files are simple bash scripts that sets environment variables
";
}

# display project status
function show_project_status {
    local pid=$(server_get_pid);
    local server_status=;
    if [ $pid -gt 0 ]; then
        server_status="Running ($pid)";
    else
        server_status="Stopped";
    fi

    echo "Current project:

        Project dir: ${PROJECT_ROOT_DIR:-'No project found'};
        Odoo branch: ${ODOO_BRANCH:-'Not defined'}
        Server status: ${server_status}
    ";
}

# function that parses commandline arguments and executes commands
function odoo_helper_main {
    # Parse command line options and run commands
    if [[ $# -lt 1 ]]; then
        echo "No options/commands supplied $#: $@";

        # load configuration files at startup
        load_project_conf;

        print_usage;
        exit 0;
    fi

    while [[ $# -gt 0 ]]
    do
        key="$1";
        case $key in
            -h|--help|help)
                print_usage;
                exit 0;
            ;;
            --version)
                echo "$ODOO_HELPER_VERSION";
                exit 0;
            ;;
            --downloads-dir)
                DOWNLOADS_DIR=$2;
                shift;
            ;;
            --addons-dir)
                ADDONS_DIR=$2;
                shift;
            ;;
            --virtual-env)
                VENV_DIR=$2;
                shift;
            ;;
            --use-copy)
                USE_COPY=1;
            ;;
            --use-unbuffer)
                USE_UNBUFFER=1;
            ;;
            --no-colors)
                deny_colors;
            ;;
            --verbose|-vv)
                VERBOSE=1;
            ;;
            fetch)
                shift;
                load_project_conf;
                fetch_module "$@";
                exit
            ;;
            generate_requirements)
                shift;
                load_project_conf;
                addons_generate_requirements "$@"
                exit;
            ;;
            update_odoo)
                shift;
                load_project_conf;
                odoo_update_sources "$@";
                exit;
            ;;
            link|link_module)
                shift;
                load_project_conf;
                link_command "$@"
                exit;
            ;;
            server)
                shift;
                load_project_conf;
                server "$@";
                exit;
            ;;
            addons)
                shift;
                load_project_conf;
                addons_command "$@";
                exit;
            ;;
            odoo-py)
                shift;
                load_project_conf;
                odoo_py "$@";
                exit;
            ;;
            scaffold)
                shift;
                load_project_conf;
                odoo_scaffold "$@";
                exit;
            ;;
            test)
                shift;
                load_project_conf;
                test_module "$@";
                exit;
            ;;
            db)
                shift;
                load_project_conf;
                odoo_db_command "$@";
                exit;
            ;;
            tr)
                shift;
                load_project_conf;
                tr_main "$@";
                exit;
            ;;
            postgres)
                shift;
                postgres_command "$@";
                exit;
            ;;
            install)
                shift;
                install_entry_point "$@";
                exit;
            ;;
            print_config)
                shift;
                load_project_conf;
                print_helper_config;
                exit;
            ;;
            status)
                load_project_conf;
                show_project_status;
                exit;
            ;;
            system)
                shift;
                system_entry_point "$@";
                exit;
            ;;
            # Server shortcuts
            start|stop|restart|log)
                load_project_conf;
                server "$@";
                exit;
            ;;
            exec)
                shift;
                load_project_conf;
                execv "$@";
                exit 0;
            ;;
            pip)
                shift;
                load_project_conf;
                exec_pip "$@";
                exit 0;
            ;;
            *)
                echo "Unknown option global option /command $key";
                exit 1;
            ;;
        esac;
        shift;
    done;
}

odoo_helper_main "$@";

