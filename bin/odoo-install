#!/bin/bash

# Odoo install helper script

SCRIPT=$0;
SCRIPT_NAME=`basename $SCRIPT`;
F=`readlink -f $SCRIPT`;  # full script path;
WORKDIR=`pwd`;


# load basic conf
if [ -f "/etc/odoo-helper.conf" ]; then
    source "/etc/odoo-helper.conf";
fi
if [ -f "$HOME/odoo-helper.conf" ]; then
    source "$HOME/odoo-helper.conf";
fi
# -----------

set -e;  # Fail on errors


if [ -z $ODOO_HELPER_LIB ]; then
    echo "Odoo-helper-scripts seems not been installed correctly.";
    echo "Reinstall it (see Readme on https://github.com/katyukha/odoo-helper-scripts/)";
    exit 1;
fi

# Load common functions
source $ODOO_HELPER_LIB/common.bash; 

# Require libs
ohelper_require 'install'
# ----------------------------------------------------------------------------------------


# Check environment for config
ODOO_BRANCH=${ODOO_BRANCH:-9.0};
SHALLOW_CLONE=${ODOO_SHALLOW_CLONE:-off};
DOWNLOAD_ARCHIVE=${ODOO_DOWNLOAD_ARCHIVE:-on};
DB_USER=${ODOO_DBUSER:-odoo};
DB_PASSWORD=${ODOO_DBPASSWORD:-odoo};
DB_HOST=${ODOO_DBHOST:-localhost};

declare -A CONF_OPTIONS;
declare -A TEST_CONF_OPTIONS;

# Default configs
USE_SYSTEM_SITE_PACKAGES=on;


function print_usage {
    echo "Bash script to instal dev version of Odoo in local environment

    Optionaly system dependencies could be installed too (Debian only systems)

    Script version: $ODOO_HELPER_VERSION

    Usage:
         bash $SCRIPT_NAME [options]

    Environment variables used:
         ODOO_BRANCH         - allow to clone specified branch. Current val is $ODOO_BRANCH
         ODOO_DOWNLOAD_ARCHIVE - (on|off) if on then only archive will be downloaded
                                 not clonned. Current value is '$DOWNLOAD_ARCHIVE'
         ODOO_SHALLOW_CLONE  - (on|off) allow or disallow shallow clone.
                               signifianly increases performance, but have some limitations.
                               If ODOO_DOWNLOAD_ARCHIVE option is on, then this option
                               has no effect
                               Current value is: $SHALLOW_CLONE
         ODOO_DBHOST         - allow to specify Postgresql's server host.
                               Current value: $DB_HOST
         ODOO_DBUSER         - allow to specify user to connect to DB as.
                               Current value: $DB_USER
         ODOO_DBPASSWORD     - allow to specify db password to connect to DB as.
                               Current value: $DB_PASSWORD

    Available options:
         --install-dir <dir>           - directory to install odoo in. default: $INSTALL_DIR
         --branch <branch>             - specify odoo branch to clone. default: $ODOO_BRANCH
         --extra-utils                 - install extra python packages. (for example 'erppeek', which
                                         is used by odoo-helper script to manage databases)
         --install-sys-deps            - (requires sudo) (debian only) (experimental).
                                         Attempt to install system dependencies.
         --install-and-conf-postgres   - (requires sudo) (debian only) (experimental)
                                         Install postgresql server and create role for Odoo.
         --use-system-packages on|off  - allow virtualenv use system packages. (default: enabled)
         --download-archive on|off     - if on, then odoo will be downloaded as archive. it is faster
                                         if You want to clone Odoo repository set this option to 'off'
                                         Default: $DOWNLOAD_ARCHIVE
         --use-shallow-clone on|off    - if not set 'download-archive' then, this option may increase
                                         download speed using --depth=1 option in git clone. this will
                                         download all by one commit. Default: $SHALLOW_CLONE
         --db-host <host>              - database host to be used in settings. default: $DB_HOST
         --db-user <user>              - database user to be used in settings. default: $DB_USER
         --db-pass <password>          - database password to be used in settings. default: odoo
         --use-unbuffer                - if set, then 'unbuffer' command from 'expect' package will be used
                                         otherwise standard 'exec' will be used to run odoo server
                                         this helps to make odoo server think that it runs in terminal thus
                                         it provides colored output.
         -y                            - Answer yes on any question. (used in apt-get commands
                                         when --install-sys-deps option supplied.)

         --conf-opt-<option_name>      - rewrite configuration option. Ex: '--conf-opt-xml_rpc_port 9999'
         --test-conf-opt-<option_name> - rewrite test configuration option Ex: '--conf-opt-xml_rpc_port 9998'
         --verbose|--vv                - show extra output

    Prerequirements:
         Next packages must be installed system-wide
         (or use --install-sys-deps option to install them during installation process):
             - virtualenv
             - postgresql-client
             - python-dev
             - g++
             - libpq-dev
             - git

    After instalation configs will be generated in 'conf' directory
    Also 'log' directory will contain Odoo logs

    Note that, it is safe enough to run this script second time with same or similar args
    if it breaks somehow. It will automaticaly detect if odoo sources were downloaded or
    virtual environment created and will not do this operations second time.
    So for example if you use option --install-sys-deps and some dependencies cannot be installed
    you can install them manualy and retry this script with or without thi option and You will not
    wast time waiting odoo sources to be downloaded again.

    For bug reports use github issues: https://github.com/katyukha/odoo-helper-scripts/issues
    ";
}

function parse_options {
    if [[ $# -lt 1 ]]; then
        echo "No options supplied $#: $@";
        print_usage;
        exit 0;
    fi

    while [[ $# -gt 0 ]]
    do
        local key="$1";
        case $key in
            --install-dir)
                INSTALL_DIR=`readlink -f $2`;
                shift;
            ;;
            --branch|-b)
                ODOO_BRANCH=$2;
                shift;
            ;;
            --extra-utils)
                INSTALL_EXTRA_UTILS=1;
            ;;
            --install-sys-deps)
                INSTALL_SYS_DEPS=1;
            ;;
            --install-and-conf-postgres)
                INSTALL_AND_CONFIGURE_POSTGRESQL=1;
            ;;
            --use-system-packages)
                USE_SYSTEM_SITE_PACKAGES=$2;
                shift
            ;;
            --download-archive)
                DOWNLOAD_ARCHIVE=$2;
                shift;
            ;;
            --use-shallow-clone)
                SHALLOW_CLONE=$2;
                shift;
            ;;
            --db-host)
                DB_HOST=$2;
                shift;
            ;;
            --db-user)
                DB_USER=$2;
                shift;
            ;;
            --db-pass)
                DB_PASSWORD=$2;
                shift;
            ;;
            --use-unbuffer)
                USE_UNBUFFER=1;
            ;;
            -y)
                ALWAYS_ANSWER_YES=1;
            ;;
            --verbose|-vv)
                VERBOSE=1;
            ;;
            --conf-opt-*)
                local opt_name=$(echo '--conf-opt-xmlrpc_port' | sed 's/--conf-opt-\(.*\)/\1/')
                CONF_OPTIONS[$opt_name]=$2;
                shift;
            ;;
            --test-conf-opt-*)
                local opt_name=$(echo '--test-conf-opt-xmlrpc_port' | sed 's/--test-conf-opt-\(.*\)/\1/')
                TEST_CONF_OPTIONS[$opt_name]=$2;
                shift;
            ;;
            -h|--help|help)
                print_usage;
                exit 0;
            ;;
            *)
                echo "Unknown option global option /command $key";
                exit 1;
            ;;
        esac
        shift
    done
}

function config_dirs {
    # Directory and file paths
    INSTALL_DIR=${INSTALL_DIR:-$WORKDIR/odoo-$ODOO_BRANCH};
    PROJECT_ROOT_DIR=$INSTALL_DIR;
    BASE_DIR=$INSTALL_DIR;

    config_default_vars;  # imported from common module

    # define addons path to be placed in config files
    ADDONS_PATH="$ODOO_PATH/openerp/addons,$ODOO_PATH/addons,$ADDONS_DIR";

}

function download_odoo {
   local ODOO_ARCHIVE=$DOWNLOADS_DIR/odoo.$ODOO_BRANCH.tar.gz
   if [ ! -f $ODOO_ARCHIVE ]; then
       wget -O $ODOO_ARCHIVE https://github.com/odoo/odoo/archive/$ODOO_BRANCH.tar.gz;
   fi
   tar -zxf $ODOO_ARCHIVE;
   mv odoo-$ODOO_BRANCH $ODOO_PATH;
}

function clone_odoo {
    if [ "$SHALLOW_CLONE" == "on" ]; then
        local DEPTH="--depth=1";
    else
        local DEPTH="";
    fi

    git clone --branch $ODOO_BRANCH --single-branch $DEPTH https://github.com/odoo/odoo.git $ODOO_PATH;

}

function install_odoo {
    local save_dir=`pwd`;
    cd "$INSTALL_DIR";

    # Install prerequirements if option --install-sys-deps enabled
    if [ ! -z $INSTALL_SYS_DEPS ]; then
        install_system_prerequirements;
    fi

    # Install and configure postgresql
    if [ ! -z $INSTALL_AND_CONFIGURE_POSTGRESQL ]; then
        install_and_configure_postgresql;
    fi

    # if not installed odoo, install it
    if [ ! -d $BASE_DIR/odoo ]; then
        if [ "$DOWNLOAD_ARCHIVE" == "on" ]; then
            download_odoo;
        else
            clone_odoo;
        fi
    fi

    # Install system dependencies if asked
    if [ ! -z $INSTALL_SYS_DEPS ]; then
        install_sys_deps;
    fi

    # Install virtual environment
    install_virtual_env;

    # Workaround for situation when setup does not install openerp-gevent script.
    odoo_gevent_install_workaround;

    # Install Odoo in dev mode; (do not copy sources inside venv, use code in $ODOO_PATH)
    (cd $ODOO_PATH && execu python setup.py develop);

    # Workaround for situation when setup does not install openerp-gevent script.
    # (Restore modified setup.py)
    odoo_gevent_install_workaround_cleanup;

    # restore curenct working dir
    cd $save_dir;
}


# Install process
parse_options $@;
config_dirs;

create_dirs $INSTALL_DIR \
    $ADDONS_DIR \
    $CONF_DIR \
    $LOG_DIR \
    $LIBS_DIR \
    $DOWNLOADS_DIR \
    $BACKUP_DIR \
    $REPOSITORIES_DIR \
    $BIN_DIR;
 
install_odoo; 

echo "`print_helper_config`" > $BASE_DIR/$CONF_FILE_NAME;
 
# Generate configuration
cat > $ODOO_CONF_FILE << EOF
[options]
addons_path = ${CONF_OPTIONS['addons_path']:-$ADDONS_PATH}
admin_passwd = ${CONF_OPTIONS['admin_passwd']:-admin}
auto_reload = ${CONF_OPTIONS['auto_reload']:-False}
csv_internal_sep = ${CONF_OPTIONS['csv_internal_sep']:-,}
data_dir = ${CONF_OPTIONS['data_dir']:-$DATA_DIR}
db_host = ${CONF_OPTIONS['db_host']:-$DB_HOST}
db_maxconn = ${CONF_OPTIONS['db_maxconn']:-64}
;db_name = odoo
db_user = ${CONF_OPTIONS['db_user']:-$DB_USER}
db_password = ${CONF_OPTIONS['db_password']:-$DB_PASSWORD}
db_port = ${CONF_OPTIONS['db_port']:-False}
db_template = ${CONF_OPTIONS['db_template']:-template1}
dbfilter = ${CONF_OPTIONS['dbfilter']:-.*}
debug_mode = ${CONF_OPTIONS['debug_mode']:-False}
demo = ${CONF_OPTIONS['demo']:-{}}
email_from = ${CONF_OPTIONS['email_from']:-False}
import_partial = ${TEST_CONF_OPTION['import_partial']:-}
limit_memory_hard = ${TEST_CONF_OPTION['limit_memory_hard']:-2684354560}
limit_memory_soft = ${CONF_OPTIONS['limit_memory_soft']:-2147483648}
limit_request = ${CONF_OPTIONS['limit_request']:-8192}
limit_time_cpu = ${CONF_OPTIONS['limit_time_cpu']:-60}
limit_time_real = ${CONF_OPTIONS['limit_time_real']:-120}
list_db = ${CONF_OPTIONS['list_db']:-True}
log_db = ${CONF_OPTIONS['log_db']:-False}
log_handler = ${CONF_OPTIONS['log_handler']:-[':INFO']}
log_level = ${CONF_OPTIONS['log_level']:-info}
logfile = ${CONF_OPTIONS['logfile']:-$LOG_FILE}
logrotate = ${CONF_OPTIONS['logrotate']:-False}
longpolling_port = ${CONF_OPTIONS['longpolling_port']:-8072}
max_cron_threads = ${CONF_OPTIONS['max_cron_threads']:-2}
osv_memory_age_limit = ${CONF_OPTIONS['osv_memory_age_limit']:-1.0}
osv_memory_count_limit = ${CONF_OPTIONS['osv_memory_count_limit']:-False}
pg_path = ${CONF_OPTIONS['pg_path']:-None}
pidfile = ${CONF_OPTIONS['pidfile']:-$ODOO_PID_FILE}
proxy_mode = ${CONF_OPTIONS['proxy_mode']:-False}
reportgz = ${CONF_OPTIONS['reportgz']:-False}
secure_cert_file = ${CONF_OPTIONS['secure_cert_file']:-server.cert}
secure_pkey_file = ${CONF_OPTIONS['secure_pkey_file']:-server.pkey}
server_wide_modules = ${CONF_OPTIONS['server_wide_modules']:-None}
smtp_password = ${CONF_OPTIONS['smtp_password']:-False}
smtp_port = ${CONF_OPTIONS['smtp_port']:-25}
smtp_server = ${CONF_OPTIONS['smtp_server']:-localhost}
smtp_ssl = ${CONF_OPTIONS['smtp_ssl']:-False}
smtp_user = ${CONF_OPTIONS['smtp_user']:-False}
syslog = ${CONF_OPTIONS['syslog']:-False}
test_commit = ${CONF_OPTIONS['test_commit']:-False}
test_enable = ${CONF_OPTIONS['test_enable']:-False}
test_file = ${CONF_OPTIONS['test_file']:-False}
test_report_directory = ${CONF_OPTIONS['test_report_directory']:-False}
timezone = ${CONF_OPTIONS['timezone']:-False}
translate_modules = ${CONF_OPTIONS['translate_modules']:-['all']}
unaccent = ${CONF_OPTIONS['unaccent']:-False}
without_demo = ${CONF_OPTIONS['without_demo']:-False}
workers = ${CONF_OPTIONS['workers']:-1}
xmlrpc = ${CONF_OPTIONS['xmlrpc']:-True}
xmlrpc_interface = ${CONF_OPTIONS['xmlrpc_interface']:-}
xmlrpc_port = ${CONF_OPTIONS['xmlrpc_port']:-8069}
xmlrpcs = ${CONF_OPTIONS['xmlrpcs']:-True}
xmlrpcs_interface = ${CONF_OPTIONS['xmlrpcs_interface']:-}
xmlrpcs_port = ${CONF_OPTIONS['xmlrpcs_port']:-8071}
EOF
#---------------------------------------------
 
# Generate test configuration configuration
cat > $ODOO_TEST_CONF_FILE << EOF
[options]
addons_path = ${TEST_CONF_OPTION['addons_path']:-$ADDONS_PATH}
admin_passwd = ${TEST_CONF_OPTION['admin_passwd']:-admin}
auto_reload = ${TEST_CONF_OPTION['auto_reload']:-False}
csv_internal_sep = ${TEST_CONF_OPTION['csv_internal_sep']:-,}
data_dir = ${TEST_CONF_OPTION['data_dir']:-$BASE_DIR/data_dir}
db_host = ${TEST_CONF_OPTION['db_host']:-$DB_HOST}
db_maxconn = ${TEST_CONF_OPTION['db_maxconn']:-64}
db_name = ${TEST_CONF_OPTION['db_name']:-$DB_USER-odoo-test}
db_user = ${TEST_CONF_OPTION['db_user']:-$DB_USER}
db_password = ${TEST_CONF_OPTION['db_password']:-$DB_PASSWORD}
db_port = ${TEST_CONF_OPTION['db_port']:-False}
db_template = ${TEST_CONF_OPTION['db_template']:-template1}
dbfilter = ${TEST_CONF_OPTION['dbfilter']:-$DB_USER-odoo-test}
debug_mode = ${TEST_CONF_OPTION['debug_mode']:-False}
demo = ${TEST_CONF_OPTION['demo']:-{}}
email_from = ${TEST_CONF_OPTION['email_from']:-False}
import_partial = ${TEST_CONF_OPTION['import_partial']:-}
limit_memory_hard = ${TEST_CONF_OPTION['limit_memory_hard']:-2684354560}
limit_memory_soft = ${TEST_CONF_OPTION['limit_memory_soft']:-2147483648}
limit_request = ${TEST_CONF_OPTION['limit_request']:-8192}
limit_time_cpu = ${TEST_CONF_OPTION['limit_time_cpu']:-60}
limit_time_real = ${TEST_CONF_OPTION['limit_time_real']:-120}
list_db = ${TEST_CONF_OPTION['list_db']:-True}
log_db = ${TEST_CONF_OPTION['log_db']:-False}
log_handler = ${TEST_CONF_OPTION['log_handler']:-[':INFO']}
log_level = ${TEST_CONF_OPTION['log_level']:-test}
logfile = ${TEST_CONF_OPTION['logfile']:-False}
logrotate = ${TEST_CONF_OPTION['logrotate']:-False}
longpolling_port = ${TEST_CONF_OPTION['longpolling_port']:-8072}
max_cron_threads = ${TEST_CONF_OPTION['max_cron_threads']:-2}
osv_memory_age_limit = ${TEST_CONF_OPTION['osv_memory_age_limit']:-1.0}
osv_memory_count_limit = ${TEST_CONF_OPTION['osv_memory_count_limit']:-False}
pg_path = ${TEST_CONF_OPTION['pg_path']:-None}
pidfile = ${TEST_CONF_OPTION['pidfile']:-$BASE_DIR/odoo-test.pid}
proxy_mode = ${TEST_CONF_OPTION['proxy_mode']:-False}
reportgz = ${TEST_CONF_OPTION['reportgz']:-False}
;secure_cert_file ${TEST_CONF_OPTION['secure_cert_file']:-= server.cert}
;secure_pkey_file ${TEST_CONF_OPTION['secure_pkey_file']:-= server.pkey}
server_wide_modules = ${TEST_CONF_OPTION['server_wide_modules']:-None}
smtp_password = ${TEST_CONF_OPTION['smtp_password']:-False}
smtp_port = ${TEST_CONF_OPTION['smtp_port']:-25}
smtp_server = ${TEST_CONF_OPTION['smtp_server']:-localhost}
smtp_ssl = ${TEST_CONF_OPTION['smtp_ssl']:-False}
smtp_user = ${TEST_CONF_OPTION['smtp_user']:-False}
syslog = ${TEST_CONF_OPTION['syslog']:-False}
test_commit = ${TEST_CONF_OPTION['test_commit']:-False}
test_enable = ${TEST_CONF_OPTION['test_enable']:-False}
test_file = ${TEST_CONF_OPTION['test_file']:-False}
test_report_directory = ${TEST_CONF_OPTION['test_report_directory']:-False}
timezone = ${TEST_CONF_OPTION['timezone']:-False}
translate_modules = ${TEST_CONF_OPTION['translate_modules']:-['all']}
unaccent = ${TEST_CONF_OPTION['unaccent']:-False}
without_demo = ${TEST_CONF_OPTION['without_demo']:-False}
workers = ${TEST_CONF_OPTION['workers']:-1}
xmlrpc = ${TEST_CONF_OPTION['xmlrpc']:-False}
xmlrpc_interface = ${TEST_CONF_OPTION['xmlrpc_interface']:-}
xmlrpc_port = ${TEST_CONF_OPTION['xmlrpc_port']:-8269}
xmlrpcs = ${TEST_CONF_OPTION['xmlrpcs']:-False}
xmlrpcs_interface = ${TEST_CONF_OPTION['xmlrpcs_interface']:-}
xmlrpcs_port = ${TEST_CONF_OPTION['xmlrpcs_port']:-8271}
 
EOF
 
#---------------------------------------------

echo -e "${GREENC}Odoo seems to be successfully installed!${NC}";
echo "Edit configuration at $ODOO_CONF_FILE";
echo "Use odoo-helper project to manage this odoo instance";
